{"version":3,"sources":["components/Header/Header.jsx","containers/Register/Register.jsx","containers/Login/Login.jsx","containers/Profile/Profile.jsx","containers/Home/Home.jsx","containers/NewAppointment/NewAppointment.jsx","containers/ShowAppointment/ShowAppointment.jsx","containers/Admin/Admin.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","user","setUser","history","useHistory","className","to","email","onClick","localStorage","clear","push","Register","onSubmit","event","preventDefault","userBody","name","target","value","phone","password","age","address","nationality","role","axios","post","then","res","console","log","data","notification","success","message","description","setTimeout","catch","error","type","required","placeholder","htmlType","size","Login","setItem","token","JSON","stringify","Profile","userLogin","parse","getItem","Home","NewAppointment","date","split","reverse","join","symptoms","hour","defaultValue","moment","format","AppointmentController","useState","appointments","setAppointments","useEffect","appointment","deleteAppointment","_id","a","delete","map","key","name_user","AdminController","get","App","headers","Authorization","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c9a80ec.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './Header.scss';\nimport {useHistory} from \"react-router\"\n\nconst Header = ({user, setUser}) => {\n    const history = useHistory();\n\nconst logout = () =>{\n    \n    localStorage.clear();\n    \n    setUser(null);\n    history.push('/');\n}\n    return (\n        <header className=\"header\">\n            <Link to=\"/\">Home</Link>&nbsp;&nbsp;\n            {user ?\n            <div className='loggedIn'>\n                <Link to='/profile'>{user.email}</Link>\n                <span className='logout' onClick={logout}>Logout</span>\n            </div> :\n            <div className='notLoggedIn'>\n                <Link to=\"/login\">Login</Link> &nbsp;\n                <Link to=\"/register\">Register</Link>\n            </div>}\n            <div className=\"logo\"></div>\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport {useHistory} from \"react-router\";\nimport {Input, Button, notification} from 'antd';\n\nimport axios from 'axios';\nimport './Register.scss'\n\nconst Register = () =>{\n\n    const history = useHistory();\n\n    const handleSubmit = event =>{\n        event.preventDefault(); // Prevent the page from refreshing.\n        const userBody={\n            name: event.target.name.value,\n            phone: event.target.phone.value,\n            email: event.target.email.value,\n            password: event.target.password.value,\n            age: event.target.age.value,\n            address: event.target.address.value,\n            nationality: event.target.nationality.value,\n            role: event.target.role.value\n        };\n\n        axios.post('https://guarded-scrubland-93096.herokuapp.com/users/register', userBody)\n        .then(res => {\n            console.log(res.data)\n            notification.success({ message :'Registered client.',description:'Succesfully registered client.'})\n            \n            setTimeout(() => {\n                history.push(\"/login\")\n            }, 1500);\n        }).catch(error => {\n            notification.error({ message: 'Registration error.', description: 'There was an error trying to register the client.' })\n        })\n    }\n\n    return (\n        <div className=\"mainregister\">\n        <div className=\"register\">\n        <form className=\"register-form\" onSubmit={handleSubmit}>\n\n        <Input type=\"name\" name=\"name\" required placeholder=\"Write your name\" />\n        <Input type=\"phone\" name=\"phone\" required placeholder=\"Write your phone\" />\n        <Input type=\"email\" name=\"email\" required placeholder=\"Write your email\" />\n        <Input type=\"password\" name=\"password\" required placeholder=\"Write your password\" />\n        <Input type=\"age\" name=\"age\" required placeholder=\"Write your age\" />\n        <Input type=\"address\" name=\"address\" required placeholder=\"Write your address\" />\n        <Input type=\"nationality\" name=\"nationality\" required placeholder=\"Write your nationality\" />\n        <select type=\"role\" className=\"role\" name=\"role\" required placeholder=\"Choose your role\"><option value='admin'>Admin</option><option value='user'>User/Client</option></select>\n        \n        \n\n\n\n        \n        <Button type=\"primary\" className=\"buttonsignup\" htmlType=\"submit\" size=\"large\">Sign up</Button>\n         <div></div>\n    </form>\n    </div>\n    </div>\n)\n}\n\nexport default Register;","import React from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom'\nimport './Login.scss';\nimport {Input, Button, notification} from 'antd'\n\n// const Login = (props) => {\n    const Login = ({setUser}) => {\n    const history = useHistory();\n    const handleSubmit = event =>{\n        event.preventDefault(); // para evitar refrescar la página\n        const user ={\n            name:event.target.name.value,\n            email:event.target.email.value,\n            password:event.target.password.value\n        };\n        axios.post('https://guarded-scrubland-93096.herokuapp.com/users/login',user)\n        .then(res=>{\n            console.log(res.data);\n         // props.setUser(res.data.user) //seteo el user como estado del App.js\n            setUser(res.data) //seteo el user como estado del App.js\n            localStorage.setItem('authToken',res.data.token);\n            localStorage.setItem('user',JSON.stringify(res.data))\n\n        if (res.data.role === 'admin') {\n            setTimeout(() => {\n                history.push(\"/adminprofile\")\n            }, 1500);\n    }else{ setTimeout(() => {\n            history.push(\"/profile\")\n        }, 1500)};\n            notification.success({message:'Welcome back ' +user.name,description:'It is nice to see you again'});\n            console.log('user')\n            \n        })\n        .catch(error=>console.log(error))\n\n    }\n    return (\n        <div className=\"login\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n            <Input type=\"name\" name=\"name\" required placeholder=\"Introduce tu nombre\"/>\n            <Input type=\"email\" name=\"email\" required placeholder=\"Introduce tu email\" />\n            <Input type=\"password\" name=\"password\" required placeholder=\"Introduce tu contraseña\"/>\n\n            <Button className=\"buttonlogin\" type=\"primary\" htmlType=\"submit\">Login</Button>\n        </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './Profile.scss'\n\nconst Profile = () => {\n    const userLogin = JSON.parse(localStorage.getItem('user'));\n    return (\n       console.log(userLogin),\n\n       <div className=\"body\">\n\n\n       <div className=\"containerButtons\">\n             <div className=\"buttonsProfile\">\n               <Link to=\"/profile/newappointment\">Make New Appointment</Link>\n             </div>\n             <div className=\"buttonsProfile\">\n               <Link to=\"/profile/showappointment\">Check Appointments</Link>\n             </div>\n             \n             <div className=\"buttonsProfile\">\n               <Link to=\"/\">Home</Link>\n             </div>\n       </div>\n     </div>\n    )\n}\n\nexport default Profile;\n\n\n\n","import React from 'react';\n\n\nimport './Home.scss';\n\nconst Home = () => {\n  \n    return (\n        <div className=\"home\">\n            <div className=\"leitmotiv\">\n            .\n        </div>\n            <div className=\"clinicatext\">\n        <p>En Clínicas De Colli llevamos más de 10 años ofreciendo nuestros servicios profesionales.<br></br>\n\nRealizamos tratamientos dentales de todo tipo con las técnicas más innovadoras y apostando por la comodidad del paciente.<br></br>\n\nSomos especialistas en Implantes Dentales, Salud de las Encías, Ortodoncia, Estética y Rehabilitación.</p>\n        </div>\n        \n        </div>\n    )\n   \n    \n}\n\n\nexport default Home;\n","import React from 'react';\nimport './NewAppointment.scss';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport {TimePicker,Input, Button, notification} from 'antd';\nimport moment from 'moment';\n\nconst format = 'HH:mm'\n\n\n\n\n\nconst NewAppointment = () =>{\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    const history = useHistory();\n\n    \n\n    const handleSubmit = event =>{\n        event.preventDefault(); // Prevent the page from refreshing.\n        \n        const NewAppointment={\n            \n            token: user.token,\n            date: event.target.date.value.split(\"-\").reverse().join(\"-\"),\n            symptoms: event.target.symptoms.value,\n            hour: event.target.hour.value\n        };\n\n        axios.post(`https://guarded-scrubland-93096.herokuapp.com/appointments/create/${NewAppointment.token}`, NewAppointment)\n        .then(res => {\n\n            localStorage.setItem('appointment',JSON.stringify(res.data))\n            notification.success({ message :'You have made an appointment',description:`Date: ${NewAppointment.date} Hour: ${NewAppointment.hour}`})\n            \n            setTimeout(() => {\n                history.push(\"/profile\")\n            }, 1900);\n        }).catch(error => {\n            notification.error({ message: 'Appointment error.', description: 'There was an error.' })\n        })\n    }\n\n    return (\n        \n        <div className=\"appointment\">\n        <form className=\"appointment-form\" onSubmit={handleSubmit}>\n\n        <Input type=\"date\" name=\"date\" required placeholder=\"Set the date you desire the new appointment\" />\n        <Input type=\"symptoms\" name=\"symptoms\" required placeholder=\"Can you describe your symptoms?\" />\n        <TimePicker type=\"hour\" name=\"hour\" defaultValue={moment('12:00', format)} format={format} />\n\n\n\n\n        <Button className=\"newButton\" type=\"primary\" htmlType=\"submit\">Create new appointment</Button>\n        </form>\n    </div>\n)\n}\n\nexport default NewAppointment;\n\n\n\n\n","import React, {useEffect, useState} from 'react';\nimport './ShowAppointment.scss'\nimport axios from 'axios';\n\nimport {Button, notification} from 'antd'\n\n\n\n\nconst AppointmentController = () => {\n\n    \n    const [appointments,setAppointments] = useState([]);\n    \n\n   useEffect(() => {\n     let user = JSON.parse(localStorage.getItem('user'));\n         axios.post(`https://guarded-scrubland-93096.herokuapp.com/appointments/show/${user.email}`, user.email)\n           .then((res) => {\n               console.log(res.data)\n               setAppointments(res.data.appointment);\n               console.log(setAppointments)\n               localStorage.setItem('appointments', JSON.stringify(res.data));\n           })\n    }, [])\n\n    const deleteAppointment = async(_id) => {\n\n        let user = JSON.parse(localStorage.getItem('user'));\n       await axios.delete('https://guarded-scrubland-93096.herokuapp.com/appointments/cancel/' + _id);\n        notification.success({message:'Appointment successfully cancelled.', description:'Please, contact us if you have any problem'})\n       await axios.post(`https://guarded-scrubland-93096.herokuapp.com/appointments/show/${user.email}`, user.email)\n       .then((res) => {\n           console.log(res.data)\n           setAppointments(res.data.appointment);\n       }).catch((error) =>{\n           console.log(error);\n       })\n      }\n\n\n        return(\n            <div className='appointmentprofile'>\n        <div className=\"appointmentContainer\">\n            {appointments?.map(appointment =>\n                <div key={appointment._id} className=\"cardAppointment\">\n                    \n                  <div className='title'><strong>Patient Name:</strong> <em>{appointment.name_user}</em></div>\n                  <div className='title'><strong>Motive:</strong> <em>{appointment.symptoms}</em></div>\n                  <div className='title'><strong>Day:</strong> <em>{appointment.date}</em></div>\n                  <div className='title'><strong>Hour:</strong> <em>{appointment.hour}</em></div>\n                  \n                  \n                  <Button className=\"buttonApp\" onClick={() => {deleteAppointment(appointment._id)}}>Cancel  </Button>\n                </div>\n            )}\n        </div>\n      </div>\n        )\n}\n\n\nexport default AppointmentController;","import React, {useEffect, useState} from 'react';\nimport './Admin.scss'\nimport axios from 'axios';\n\nimport {Button, notification} from 'antd'\n\n\n\n\nconst AdminController = () => {\n\n    \n    const [appointments,setAppointments] = useState([]);\n    \n\n   useEffect(() => {\n  // let user = JSON.parse(localStorage.getItem('user'));\n         axios.get('https://guarded-scrubland-93096.herokuapp.com/appointments/show')\n           .then((res) => {\n               console.log(res.data)\n\n               localStorage.setItem('appointments', JSON.stringify(res.data));\n               setAppointments(res.data.appointment);\n               console.log(setAppointments)\n           })\n    }, [])\n\n    const deleteAppointment = async(_id) => {\n\n       await axios.delete('https://guarded-scrubland-93096.herokuapp.com/appointments/cancel/' + _id);\n        notification.success({message:'Appointment successfully cancelled.', description:'Please, contact us if you have any problem'})\n       .then((res) => {\n           console.log(res.data)\n           setAppointments(res.data.appointment);\n       }).catch((error) =>{\n           console.log(error);\n       })\n      }\n\n\n        return(\n            <div className='adminprofile'>\n        <div className=\"appContainer\">\n            {appointments?.map(appointment =>\n                <div key={appointment._id} className=\"cardApp\">\n                    \n                  <div className='title'><strong>Patient:</strong> <em>{appointment.name_user}</em></div>\n                  <div className='title'><strong>Motive:</strong> <em>{appointment.symptoms}</em></div>\n                  <div className='title'><strong>Day:</strong> <em>{appointment.date}</em></div>\n                  <div className='title'><strong>Hour:</strong> <em>{appointment.hour}</em></div>\n                  \n                  \n                  <Button className=\"buttonApp\" onClick={() => {deleteAppointment(appointment._id)}}>Cancel  </Button>\n                </div>\n            )}\n        </div>\n      </div>\n        )\n}\n\n\nexport default AdminController;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport Header from './components/Header/Header';\nimport Register from './containers/Register/Register';\nimport Login from './containers/Login/Login';\nimport Profile from './containers/Profile/Profile';\nimport Home from './containers/Home/Home';\nimport NewAppointment from './containers/NewAppointment/NewAppointment';\nimport AppointmentController from './containers/ShowAppointment/ShowAppointment';\nimport AdminController from './containers/Admin/Admin'\n\n\n\nfunction App() {\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  useEffect(() => {\n    const token = localStorage.getItem('authToken')\n    axios.get('https://guarded-scrubland-93096.herokuapp.com/users',\n      {\n        headers: {\n          Authorization: token\n        }\n      })\n      .then(res => {\n        setUser(res.data)\n      })\n  }, [])\n  return (\n    <BrowserRouter>\n      <Header user={user} setUser={setUser} />\n      <Switch>\n        <Route exact path ='/' component={Home} />\n        <Route exact path ='/register' component={Register}/>\n        <Route exact path='/profile' component={Profile} />\n        <Route exact path='/adminprofile' component={AdminController} />\n        <Route exact path='/profile/newappointment' component={NewAppointment} />\n        <Route exact path='/profile/showappointment' component={AppointmentController} />\n        <Route exact path='/login' >\n\n          <Login setUser={setUser} />\n\n          </Route>\n       </Switch>\n       \n       </BrowserRouter>\n          \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}